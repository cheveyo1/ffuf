模糊更快 U Fool - v2.0.0
ds
HTTP 选项：
  -H 标头`“名称：值”`，以冒号分隔。接受多个 -H 标志。
  -X 使用的 HTTP 方法
  -b Cookie 数据`"NAME1=VALUE1; NAME2=VALUE2"`用于复制为curl功能。
  -d 发布数据
  -http2 使用HTTP2协议（默认值：false）
  -ignore-body 不获取响应内容。（默认值：假）
  -r 遵循重定向（默认值： false）
  -recursion 递归扫描。仅支持 FUZZ 关键字，并且 URL (-u) 必须以该关键字结尾。（默认值：假）
  -recursion-depth 最大递归深度。（默认值：0）
  -recursion-strategy 递归策略：“默认”用于基于重定向，“贪婪”用于在所有匹配上递归（默认：默认）
  -replay-proxy 使用此代理重播匹配的请求。
  -sni 目标 TLS SNI，不支持 FUZZ 关键字
  -timeout HTTP 请求超时（以秒为单位）。（默认值：10）
  -u 目标 URL
  -x 代理 URL（SOCKS5 或 HTTP）。例如：http://127.0.0.1:8080 或socks5://127.0.0.1:8080

常规选项：
  -V 显示版本信息。（默认值：假）
  -ac 自动校准过滤选项（默认值：false）
  -acc 自定义自动校准字符串。可以多次使用。意味着-ac
  -ach 每主机自动校准（默认值：false）
  -ack 自动校准关键字（默认值：FUZZ）
  -acs 自动校准策略：“基本”或“高级”（默认值：基本）
  -c 对输出进行着色。（默认值：假）
  -config 从文件加载配置
  -json JSON输出，打印换行符分隔的JSON记录（默认值：false）
  -maxtime 整个进程的最大运行时间（以秒为单位）。（默认值：0）
  -maxtime-job 每个作业的最大运行时间（以秒为单位）。（默认值：0）
  -noninteractive 禁用交互式控制台功能（默认值：false）
  -p 请求之间的“延迟”秒数，或随机延迟范围。例如“0.1”或“0.1-2.0”
  -rate 每秒请求率（默认值：0）
  -s 不打印附加信息（静默模式）（默认值：false）
  -sa 停止所有错误情况。意味着 -sf 和 -se。（默认值：假）
  -scraperfile 自定义抓取文件路径
  -scrapers 活动爬虫组（默认值：全部）
  -se 出现虚假错误时停止（默认值： false）
  -search 从 ffuf 历史记录中搜索 FFUFHASH 有效负载
  -sf 当 > 95% 的响应返回 403 Forbidden 时停止（默认值： false）
  -t 并发线程数。（默认值：40）
  -v 详细输出，打印完整的 URL 并重定向位置（如果有）以及结果。（默认值：假）

匹配器选项：
  -mc 匹配 HTTP 状态代码，或“all”表示所有内容。（默认：200,204,301,302,307,401,403,405,500）
  -ml 匹配响应中的行数
  -mmode 匹配器集合运算符。任一：和、或（默认：或）
  -mr 匹配正则表达式
  -ms 匹配 HTTP 响应大小
  -mt 匹配第一个响应字节的毫秒数，大于或小于。例如：>100 或 <100
  -mw 匹配响应中的字数

过滤器选项：
  -fc 从响应中过滤 HTTP 状态代码。逗号分隔的代码和范围列表
  -fl 按响应行数过滤。逗号分隔的行数和范围列表
  -fmode 过滤器设置运算符。任一：和、或（默认：或）
  -fr 过滤正则表达式
  -fs 过滤 HTTP 响应大小。以逗号分隔的尺寸和范围列表
  -ft 按距第一个响应字节的毫秒数（大于或小于）进行过滤。例如：>100 或 <100
  -fw 按响应中的字数过滤。逗号分隔的字数和范围列表

输入选项：
  -D DirSearch 单词列表兼容模式。与 -e 标志结合使用。（默认值：假）
  -e 逗号分隔的扩展名列表。扩展 FUZZ 关键字。
  -ic 忽略单词列表注释（默认值：false）
  -input-cmd 生成输入的命令。使用此输入法时需要 --input-num。覆盖-w。
  -input-num 要测试的输入数量。与--input-cmd 结合使用。（默认值：100）
  -input-shell 用于运行命令的 Shell
  -mode 多词列表操作模式。可用模式：集束炸弹、干草叉、狙击手（默认：集束炸弹）
  -request 包含原始http请求的文件
  -request-proto 与原始请求一起使用的协议（默认值：https）
  -w 单词列表文件路径和（可选）关键字以冒号分隔。例如。'/path/to/wordlist:KEYWORD'

输出选项：
  -debug-log 将所有内部日志记录写入指定文件。
  -o 将输出写入文件
  -od 存储匹配结果的目录路径。
  -of 输出文件格式。可用格式：json、ejson、html、md、csv、ecsv（或“all”表示所有格式）（默认值：json）
  - 或 如果没有结果，则不创建输出文件（默认值： false）

用法示例：
  对 wordlist.txt 中的文件路径进行模糊测试，匹配所有响应，但过滤掉内容大小为 42 的响应。
  彩色、详细的输出。
    ffuf -w wordlist.txt -u https://example.org/FUZZ -mc all -fs 42 -c -v

  模糊主机标头，匹配 HTTP 200 响应。
    ffuf -w 主机.txt -u https://example.org/ -H "主机：FUZZ" -mc 200

  模糊 POST JSON 数据。匹配所有不包含文本“错误”的响应。
    ffuf -w条目.txt -u https://example.org/ -X POST -H“内容类型：application/json”\
      -d '{“名称”：“FUZZ”，“另一个键”：“另一个值”}' -fr“错误”

  模糊多个位置。仅匹配反映“VAL”关键字值的响应。有色。
    ffuf -w params.txt:PARAM -w value.txt:VAL -u https://example.org/?PARAM=VAL -mr "VAL" -c

  更多信息和示例：https://github.com/ffuf/ffuf
